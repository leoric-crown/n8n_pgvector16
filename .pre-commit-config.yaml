repos:
  # Secret detection with detect-secrets
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: ["--baseline", ".secrets.baseline"]
        exclude: package.lock.json

  # Basic file and security checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: ["--allow-multiple-documents"]
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-added-large-files
        args: ["--maxkb=500"]
      - id: check-merge-conflict
      - id: detect-private-key
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-symlinks
      - id: destroyed-symlinks
      - id: mixed-line-ending
      - id: fix-byte-order-marker

  # YAML formatting and linting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        files: \.(yaml|yml)$
        args: ["--print-width", "120", "--prose-wrap", "preserve"]

  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: ["-c", ".yamllint.yml"]

  # Markdown formatting and linting
  - repo: https://github.com/executablebooks/mdformat
    rev: 0.7.17
    hooks:
      - id: mdformat
        additional_dependencies:
          - mdformat-gfm
          - mdformat-tables
        args: ["--wrap", "120"]

  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.42.0
    hooks:
      - id: markdownlint
        args: ["--fix"]

  # Local security and Docker checks
  - repo: local
    hooks:
      - id: check-env-example
        name: Verify .env.example has placeholder values
        entry: >
          bash -c 'if grep -qE "(your_|example_|changeme|replace_)" .env.example;
          then echo "✅ .env.example contains placeholder values";
          else echo "⚠️  .env.example may contain real secrets"; exit 1; fi'
        language: system
        files: '^\.env\.example$'

      - id: prevent-env-commit
        name: Prevent .env file commits
        entry: bash -c 'echo "❌ .env files should not be committed! Use .env.example instead."; exit 1'
        language: system
        files: '^\.env$'

      - id: docker-compose-check
        name: Docker Compose syntax validation
        entry: bash -c 'docker compose -f docker-compose.yml config > /dev/null'
        language: system
        files: '^docker-compose\.ya?ml$'
        pass_filenames: false

      - id: check-dockerfile-security
        name: Basic Dockerfile security checks
        entry: >
          bash -c 'if grep -rE "(ADD.*http|--privileged|USER.*root)"
          --include="*Dockerfile*" --include="*.dockerfile" .;
          then echo "⚠️  Potential security issues in Dockerfile"; exit 1; fi'
        language: system
        files: '(Dockerfile|\.dockerfile)$'
        pass_filenames: false

      - id: shellcheck
        name: Shellcheck for shell scripts
        entry: >
          bash -c 'if command -v shellcheck >/dev/null 2>&1;
          then shellcheck "$@"; else echo "⚠️  shellcheck not installed, skipping"; fi'
        language: system
        files: '\.(sh|bash)$'
