# Local DNS Server (e.g. PiHole)
DNS_SERVER=10.3.14.3

# Postgres
POSTGRES_DB=n8n
POSTGRES_USER=postgres
# GENERATE: strong_password(32) | Manual: openssl rand -base64 32
POSTGRES_PASSWORD=your_super_secret_postgres_password
POSTGRES_NON_ROOT_USER=n8n_user
# GENERATE: strong_password(28) | Manual: openssl rand -base64 28
POSTGRES_NON_ROOT_PASSWORD=your_secret_postgres_password

# pgAdmin (PostgreSQL administration web interface)
PGADMIN_DEFAULT_EMAIL=admin@example.com
# GENERATE: strong_password(16) | Manual: openssl rand -base64 16
PGADMIN_DEFAULT_PASSWORD=admin
PGADMIN_PORT=5050

# n8n
# GENERATE: template("protocol") | Manual: Set to "https" for production with reverse proxy
N8N_PROTOCOL=https
# GENERATE: template("n8n_host") | Manual: Set to your domain (e.g., n8n.yourdomain.com)
N8N_HOST=n8n.lan
N8N_PORT=5678
# GENERATE: template("n8n_webhook_url") | Manual: Set to full webhook URL
N8N_WEBHOOK_URL=https://n8n.lan
# GENERATE: auto_detect_timezone | Manual: Set your timezone (e.g., America/New_York)
TIMEZONE=America/Mexico_City
# GENERATE: hex_key(32) | Manual: openssl rand -hex 32
N8N_ENCRYPTION_KEY=your_encryption_key

# n8n-mcp (AI assistant for development)
# GENERATE: manual | Manual: Generate after n8n setup via API
N8N_API_KEY=your_n8n_api_key_here
# GENERATE: hex_key(32) | Manual: openssl rand -hex 32
MCP_AUTH_TOKEN=your_secure_auth_token_here
MCP_PORT=8042

# PostgreSQL MCP Server (Database query and management via MCP protocol)
POSTGRES_MCP_PORT=8700
# By default set to the actual n8n DB, but you can change which DB to connect to here
POSTGRES_MCP_DB=n8n

# Langfuse (LLM observability and token tracking)
# GENERATE: template("langfuse_url") | Manual: Set to your Langfuse URL
LANGFUSE_URL=https://langfuse.lan
LANGFUSE_PORT=9119
LANGFUSE_DB_USER=langfuse_user
# GENERATE: strong_password(30) | Manual: openssl rand -base64 30
LANGFUSE_DB_PASSWORD=your_super_secret_langfuse_password
LANGFUSE_DB_NAME=langfuse
# GENERATE: hex_key(32) | Manual: openssl rand -hex 32
LANGFUSE_NEXTAUTH_SECRET=your_langfuse_nextauth_secret_here
# GENERATE: hex_key(32) | Manual: openssl rand -hex 32 (256-bit encryption key for API keys)
LANGFUSE_ENCRYPTION_KEY=your_langfuse_encryption_key_here
# GENERATE: hex_key(32) | Manual: openssl rand -hex 32
LANGFUSE_SALT=your_langfuse_salt_here
# Optional but recommended for security
LANGFUSE_ENABLE_BLOB_STORAGE_FILE_LOG=true
# Set to false initially to create admin account, then change to true
LANGFUSE_AUTH_DISABLE_SIGNUP=false

# Required for Langfuse v3 full stack
LANGFUSE_CLICKHOUSE_USER=default
# GENERATE: base64_password(12) | Manual: openssl rand -base64 12
LANGFUSE_CLICKHOUSE_PASSWORD=your_clickhouse_password
# GENERATE: base64_password(24) | Manual: openssl rand -base64 24
LANGFUSE_REDIS_PASSWORD=your_redis_password
# GENERATE: s3_access_key(20) | Manual: openssl rand -hex 10 | tr 'a-f' 'A-F'
LANGFUSE_S3_ACCESS_KEY=langfuse_access_key
# GENERATE: base64_password(30) | Manual: openssl rand -base64 30
LANGFUSE_S3_SECRET_KEY=your_s3_secret_key

# Tableau MCP Server (AI-powered Tableau integration)
TABLEAU_TRANSPORT=http
TABLEAU_MCP_PORT=3927
TABLEAU_SERVER_URL=https://eu-west-1a.online.tableau.com
TABLEAU_SITE_NAME=yoursitename
TABLEAU_PAT_NAME=yourpatname
TABLEAU_PAT_VALUE=your_personal_access_token_value
TABLEAU_DATASOURCE_CREDENTIALS=
TABLEAU_DEFAULT_LOG_LEVEL=debug
TABLEAU_INCLUDE_TOOLS=
TABLEAU_EXCLUDE_TOOLS=list-all-pulse-metric-definitions,list-pulse-metric-definitions-from-definition-ids,list-pulse-metrics-from-metric-definition-id,list-pulse-metrics-from-metric-ids,list-pulse-metric-subscriptions,generate-pulse-metric-value-insight-bundle
TABLEAU_MAX_RESULT_LIMIT=
TABLEAU_DISABLE_QUERY_DATASOURCE_FILTER_VALIDATION=
TABLEAU_DISABLE_METADATA_API_REQUESTS=false

# Ollama (Native installation - not containerized)
# see ./ollama
OLLAMA_HOST=host.docker.internal
OLLAMA_PORT=11434
OLLAMA_BASE_URL=http://host.docker.internal:11434

# Optional - Monitoring
# PROMETHEUS_PORT=
# GRAFANA_PORT=
# GRAFANA_ADMIN_USER=
# GRAFANA_ADMIN_PASSWORD=
